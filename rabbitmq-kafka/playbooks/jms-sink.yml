- name: Install JMS source connector
  hosts: all
  gather_facts: no
  vars_files:
  - variables.yml
  vars:
    my_conn_name: jms_sink01
    my_conn_url: "{{ connector_url }}/{{ my_conn_name }}"
  tasks:
  - name: Get list of installed connectors
    uri:
      url: "{{ connector_url }}"
      return_content: yes
      validate_certs: no
    register: conn_response

  - name: Parse connectors list
    set_fact:
      conn_list: "{{ conn_response.content | from_json }}"

  - name: Delete existing connector
    uri:
      url: "{{ my_conn_url }}"
      method: DELETE
      status_code: 204
      validate_certs: no
    when: my_conn_name in conn_list

  - name: Add source connector
    uri:
      url: "{{ connector_url }}"
      body:
        name: "{{ my_conn_name }}"
        config:
          connector.class: com.datamountaineer.streamreactor.connect.jms.sink.JMSSinkConnector
          connect.jms.kcql: "INSERT INTO jms_sink01 SELECT * FROM jms_sink01 WITHTYPE QUEUE"
          connect.jms.initial.context.factory: com.sun.jndi.fscontext.RefFSContextFactory
          connect.jms.url: file:/etc/kafka/jms-connector/bindings/aws_test
          connect.jms.username: "{{ connector_user }}"
          connect.jms.password: "{{ connector_pass }}"
          connect.jms.connection.factory: ConnectionFactory
          key.converter: org.apache.kafka.connect.json.JsonConverter
          key.converter.schemas.enable: false
          value.converter: org.apache.kafka.connect.json.JsonConverter
          value.converter.schemas.enable: false
          tasks.max: 1
          topics: jms_sink01
      body_format: json
      method: POST
      status_code: 201
      validate_certs: no

